//reset重置
* {
  box-sizing: border-box;
  outline: none;
}
html{
  font-size:13px ;
}
body{
  margin: 0;
  font-family: Arial,Helvetica,sans-serif;
  line-height: 1.2em;
  background: #f1f1f1;
  -webkit-font-smoothing: antialiased;
}
p{
  line-height: 1.5em;
}
a{
  color: #999;
}
//定义颜色
$colors:("primary":#db9e3f,"white":#fff,"white-1":#fcfcfc,"white-2":#eceef0,"blue-1":#1f3695,"danger":#791a15,"black":#000,"light-1":#d4d9de,"blue":#4394e4,"info":#4b67af,"dark":#222,"grey":#999,"grey-1":#666,"light":#f9f9f9,"dark-1":#333);
@each $colorKey,$color in $colors{
  .text-#{$colorKey}{
    color: $color;
  }
  .bg-#{$colorKey}{
    background-color: $color;
  }
}
$border-color:map_get($colors,'light-1');
//定义文本
@each $var in (left,center,right){
  .text-#{$var}{
    text-align: $var !important;
  }
}
//字体尺寸
$base-font-size:1rem;
$font-sizes:(
        xxs:0.6154,//8px
     xs:0.7692,//10px
   sm:0.9231,//12px
   md:1,//13px
   lg:1.0769,//14px
   mx:1.2//16px
);
@each $sizeKey,$size in $font-sizes{
  .fs-#{$sizeKey}{
    font-size: $size*$base-font-size;
  }
}
//文字溢出隐藏,不换行
.text-ellipsis{
  display: inline-block;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: normal;
}
//width,height
.w-100{
  width: 100%;
}
.h-100{
  height: 100%;
}
//flex
.d-flex{
  display: flex;
}
.flex-column{
  flex-direction: column;
}
.flex-wrap{
  flex-wrap:wrap;
}
$flex-jc:(
start:flex-start,
end:flex-end,
center:center,
between:space-between,
        around:space-around,
);
@each $key,$value in $flex-jc{
  .jc-#{$key}{
    justify-content:$value ;
  }
}
$flex-ai:(
        start:flex-start,
        end:flex-end,
        center:center,
       stretch:stretch,
);
@each $key,$value in $flex-ai{
  .ai-#{$key}{
    align-items:$value ;
  }
}
.flex-1{
  flex:1;
}
.flex-grow-1{
  flex-grow:1;
}
$spacing-types:(m:margin,p:padding);
$spacing-directions:(t:top,r:right,b:bottom,l:left);
$spacing-base-size:1rem;
$spacing-sizes:(
        0:0,
        1:0.25,
        2:0.5,
        3:1,
        4:1.5,
        5:3
);
@each $typeKey,$type in $spacing-types{
//.m-1
    @each $sizeKey,$size in $spacing-sizes{
      .#{$typeKey}-#{$sizeKey}{
        #{$type}:$size*$spacing-base-size;
      }
    }
  //.mx-1,my-1
  @each $sizeKey,$size in $spacing-sizes{
    .#{$typeKey}x-#{$sizeKey}{
      #{$type}-left:$size*$spacing-base-size;
      #{$type}-right:$size*$spacing-base-size;
    }
    .#{$typeKey}y-#{$sizeKey}{
      #{$type}-top:$size*$spacing-base-size;
      #{$type}-bottom:$size*$spacing-base-size;
    }
  }
  //.mt-1
  @each $directionKey,$direction in $spacing-directions{
    @each $sizeKey,$size in $spacing-sizes{
      .#{$typeKey}#{$directionKey}-#{$sizeKey}{
        #{$type}-#{$direction}:$size*$spacing-base-size;
      }
    }
  }

}
//button
.bth{
  border: none;
  border-radius:0.1538rem;
  font-size: map_get($font-sizes,'sm')*$base-font-size;
  padding: 0.2rem 0.6rem;
  &.bth-lg{
    display: flex;
    justify-content: center;
    align-items: center;
    i{
      color: map_get($colors,'primary');
      font-size: 1.5rem;
      font-weight: bold;
      margin-right: 0.5rem;
    }
    background: map-get($colors,'white-1');
    border:1px solid map_get($colors,'white-2');
    padding: 0.8rem 1rem;
    font-size: 1rem;

  }
}
.nav{
  display: flex;
  //justify-content: space-around;
  .nav-item{

   border-bottom: 3px solid transparent;
    padding-bottom:0.2rem;

    //&表示并列关系
    &.active{

      color: map_get($colors,'primary');
      border-bottom-color:map_get($colors,'primary');
    }
  }
 &.nav-inverse{


   .nav-item{

  color: map_get($colors,'white');
     &.active{
       justify-content: space-around;
       border-bottom-color: map_get($colors,'white');
     }
    }
}
}
//sprite
.sprite{
  background:url(../image/index.png) no-repeat 0 0;
  background-size: 28.8462rem;
  display: inline-block;
  &.sprite-news{
    width: 1.7692rem;
    height: 1.5385rem;
    background-position: 63.546%  15.517%;
  }
  &.sprite-story{

  }
  &.sprite-arrow{
    width:0.7692rem;
    height:0.7692rem;
    background-position: 38.577% 52.076%;
  }
}
//边框
@each $dir in (top,right,bottom,left){
  .border-#{$dir}{
    border-#{$dir}:1px solid $border-color;
  }
}